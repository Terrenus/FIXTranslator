input {
  file {
    path => "/usr/share/logstash/sample_fix_messages.txt"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => plain { charset => "UTF-8" }
  }
}

filter {
  # Remove stray CR (Windows line endings)
  mutate {
    gsub => [
      "message", "\r", ""
    ]
  }

  # Call parser and attach response to http_response
  http {
    url => "http://fixparser:9000/parse"
    verb => "POST"
    body => { "raw" => "%{message}" }
    body_format => "json"
    headers => { "Content-Type" => "application/json" }
    target_body => "http_response"
  }

  # If the http call returned something parse it (http_response is a JSON string)
  if [http_response] {
    json {
      source => "http_response"
      target => "fix_parsed"
    }

    mutate {
      rename => { "message" => "raw_fix" }
    }

    ruby {
      code => '
        parsed = event.get("fix_parsed")
        if parsed && parsed.is_a?(Hash)
          flat = parsed["flat"] || parsed
          if flat.is_a?(Hash)
            flat.each do |k, v|
              key = "fix_" + k.gsub(/\s+/, "_")
              event.set(key, v)
            end
          end
        end
      '
    }
  }
}

output {
  stdout { codec => rubydebug }
}
